name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout the code
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Run Unit Tests
    - name: Run Unit Tests
      run: |
        dotnet test --filter TestCategory=Unit
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        AWS_REGION: us-west-1

    # Step 4: Run Integration Tests
    - name: Run Integration Tests
      run: |
        dotnet test --filter TestCategory=Integration
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        AWS_REGION: us-west-1

    # Step 5: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-west-1
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 767397708304.dkr.ecr.$AWS_REGION.amazonaws.com

    # Step 6: Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t 767397708304.dkr.ecr.eu-west-1.amazonaws.com/doorapp/gateway:latest .
        docker push 767397708304.dkr.ecr.eu-west-1.amazonaws.com/doorapp/gateway:latest

    # Step 7: Update Kubeconfig with AWS CLI
    - name: Update Kubeconfig with AWS CLI
      run: |
        aws eks --region eu-west-1 update-kubeconfig --name doorapp
        cat $HOME/.kube/config  # Print kubeconfig for debugging purposes
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-west-1

    # Step 8: List all Kubernetes contexts to verify available contexts
    - name: List Kubernetes Contexts
      run: kubectl config get-contexts

    # Step 9: Set correct Kubernetes context
    - name: Set Kubernetes Context
      run: |
        kubectl config use-context doorapp  # Use the correct context name
      env:
        KUBECONFIG: $HOME/.kube/config

    # Step 10: Check current Kubernetes context
    - name: Check Kubernetes context
      run: kubectl config current-context

    # Step 11: Update Kubernetes deployment
    - name: Update Kubernetes deployment
      run: |
        kubectl set image deployment/gateway-deployment gateway-container=767397708304.dkr.ecr.eu-west-1.amazonaws.com/doorapp/gateway:latest
      env:
        KUBECONFIG: $HOME/.kube/config
        AWS_REGION: eu-west-1
